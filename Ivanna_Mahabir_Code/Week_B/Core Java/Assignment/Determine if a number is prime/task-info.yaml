type: edu
files:
- name: src/Task.java
  visible: true
  placeholders:
  - offset: 70
    length: 75
    placeholder_text: // Provide your implementation here
    initial_state:
      length: 35
      offset: 70
    initialized_from_dependency: false
    possible_answer: |-
      if (value <= 1) return false;

              for (int i = 2; i <= value/2; i++) {
                  if(value % i == 0) return false;
              }

              return true;
    selected: true
    status: Failed
  text: |-
    public class Task {

        public boolean isPrime(int value) {

            // Provide your implementation here

        }
    }
  learner_created: false
- name: test/Tests.java
  visible: false
  text: |-
    import org.junit.*;
    import org.junit.rules.ExpectedException;
    import org.junit.rules.Timeout;

    import static org.junit.Assert.*;

    public class Tests {

      private Task sut;

      @Rule
      public ExpectedException expectedException = ExpectedException.none();

      @Rule
      public Timeout globalTimeout = Timeout.seconds(3);

      @Before
      public void setUp() {
        sut = new Task();
      }

      @After
      public void tearDown() {
        sut = null;
      }

      @Test
      public void testSolutionWithPrimeNumber() {
        assertTrue(sut.isPrime(13));
      }

      @Test
      public void testSolutionWithCompositeNumber() {
        assertFalse(sut.isPrime(26));
      }

      @Test
      public void testSolutionWithCarmichaelNumber() {
        assertFalse(sut.isPrime(561));
      }

      @Test
      public void testSolutionWithOne() {
        assertFalse(sut.isPrime(1));
      }

      @Test
      public void testSolutionWithZero() {
        assertFalse(sut.isPrime(0));
      }

      @Test
      public void testSolutionWithNegativeNumber() {
        assertFalse(sut.isPrime(-13));
      }

    }
  learner_created: false
status: Failed
record: -1
