
--This allows the dbms to print messages to the console (OFF by default)
SET SERVEROUTPUT ON;

--Function: Get the max ID from the artist table

--method signature (method name, return type, variables to be returned)
CREATE OR REPLACE FUNCTION get_max_id
    RETURN NUMBER
        AS max_id NUMBER;
        
BEGIN
    SELECT MAX(artistid)
    INTO max_id
    FROM artist;
    
    RETURN max_id;
END;
/

DECLARE
    maxId NUMBER;
BEGIN
    maxId := get_max_id();
    DBMS_OUTPUT.PUT_LINE('The max id in the artist table is ' || maxId);
END;
/

--drops table
DROP FUNCTION get_max_id;


--functions that returns all employees who are born after 1968
CREATE OR REPLACE FUNCTION after_1968
    RETURN SYS_REFCURSOR
    IS my_cursor SYS_REFCURSOR;

BEGIN
    OPEN my_cursor FOR
    SELECT firstname, lastname, birthdate
    FROM employee
    GROUP BY firstname, lastname, birthdate
    HAVING MIN(birthdate) > DATE '1968-12-31';
    RETURN my_cursor;
END;
/


DECLARE
    v_cursor  SYS_REFCURSOR;
    v_fn      employee.firstname%TYPE;
    v_ln      employee.lastname%TYPE;
    v_bd      employee.birthdate%TYPE;
    
BEGIN
    V_cursor := after_1968();
    
    
    LOOP
       FETCH v_cursor
       INTO v_fn, v_ln, v_bd;
       EXIT WHEN v_cursor%NOTFOUND;
       DBMS_OUTPUT.PUT_LINE(v_fn || ' ' || v_ln || ' ' || 'was born on ' || v_bd);
       END LOOP;
       CLOSE v_cursor;
END;
/

--create a procedure that reurns all of the artist in the artist table

CREATE OR REPLACE PROCEDURE get_all_artists(my_cursor OUT SYS_REFCURSOR)
IS 
BEGIN
OPEN my_cursor FOR
SELECT * 
FROM artist
ORDER BY artistid;
END;
/

DECLARE
    a_id     artist.artistid%TYPE;
    a_name   artist.name%TYPE;
    v_cursor SYS_REFCURSOR;
BEGIN
    get_all_artists(v_cursor);
    
    LOOP
       FETCH V_cursor
       INTO a_id, a_name;
       EXIT WHEN v_cursor%NOTFOUND;
       DBMS_OUTPUT.PUT_LINE('Artist id: ' || a_id || ' , Name: ' || a_name);
       END LOOP;
       
       CLOSE v_cursor;
END;
/


CREATE SEQUENCE artist_ok_seq
MINVALUE 1
MAXVALUE 999999999
INCREMENT BY 1
START WITH 276;
/

--create a trigger that will use artist_ok_seq whenever new roq is inserted

CREATE OR REPLACE TRIGGER artist_insert_trig
BEFORE INSERT ON artist
FOR EACH ROW

BEGIN
    SELECT artist_ok_seq.NEXTVAL
    INTO :new.artistid
    FROM dual;
END;
/


SELECT *
FROM artist
ORDER BY artistid;

INSERT INTO artist (name)
VALUES ('Blink-182');